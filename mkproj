#!/bin/bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"

TMPL_ROOT=$DIR/mkproj-templates


function checkTools {
    MY_YARN=$(which yarn)
    MY_JQ=$(which jq)
    MY_GIT=$(which git)

    if [[ -z "$MY_YARN" ]]; then
        echo "You have not yet installed yarn! https://yarnpkg.com/getting-started/install"
        exit 1
    fi

    if [[ -z "$MY_JQ" ]]; then
        echo "You have not yet installed jq! https://stedolan.github.io/jq/download/"
        exit 1
    fi

    if [[ -z "$MY_GIT" ]]; then
        echo "You have not yet installed git! https://git-scm.com/book/en/v2/Getting-Started-Installing-Git"
        exit 1
    fi
}

function makeTSProj {
    yarn init --yes
    yarn global add typescript
    yarn add -D @types/node eslint eslint-config-prettier eslint-plugin-prettier prettier source-map-support

    RENAMER='find src/ -name \"*.js\" -exec rename '"'"'s/\\\\.js$/.ts/'"'"' '"'"'{}'"'"' +'
    NEW_SCRIPTS=$(echo -e "{\x22start\x22: \x22node dist/index.js\x22, \x22to-ts\x22: \x22$RENAMER\x22, \x22build\x22: \x22tsc\x22, \x22build:watch\x22: \x22tsc -w\x22}")

    mv package.json package.json.bak

    cat package.json.bak | jq --argjson scripts "$NEW_SCRIPTS" '. + {scripts: $scripts}' > package.json

    TMPL_DIR="$TMPL_ROOT/ts"
    cp "$TMPL_DIR/tsconfig.json" .
    cp -R "$TMPL_DIR/src" .
    cp -R "$TMPL_DIR/dist" .
    cp "$TMPL_DIR/.gitignore" .

    yarn build
    yarn start

    echo "You can run yarn to-ts to migrate your JS code to TypeScript"
}

checkTools

if [[ $1 == "ts" ]]; then
    makeTSProj
else
    echo "I don't know how to '$1'"
fi